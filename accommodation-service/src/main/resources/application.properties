quarkus.http.port=8081

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DATASOURCE_USERNAME:postgres}
quarkus.datasource.password=${DATASOURCE_PASSWORD:root}
quarkus.datasource.jdbc.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/bookit-accommodation}
quarkus.hibernate-orm.database.generation=${HIBERNATE_GENERATION:drop-and-create}
quarkus.hibernate-orm.sql-load-script=${SQL_LOAD_SCRIPT:data-postgres.sql}

quarkus.live-reload.instrumentation=true

# SmallRye JWT
quarkus.smallrye-jwt.enabled=true
mp.jwt.verify.publickey.location=${JWT_PUBLICKEY_LOCATION:publickey.pem}
mp.jwt.verify.issuer=${JWT_ISSUER:https://example.com}

# Custom JWT Properties
quarkusjwt.jwt.duration=${JWT_DURATION:36000}
quarkusjwt.password.secret=${JWT_SECRET:mysecret}
quarkusjwt.password.iteration=33
quarkusjwt.password.keylength=256


# RabbitMQ connection

quarkus.rabbitmq.url=amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}

mp.messaging.outgoing.filter-request-queue.connector=smallrye-rabbitmq
mp.messaging.outgoing.filter-request-queue.exchange.name=filter-request-queue
mp.messaging.outgoing.filter-request-queue.queue.name=filter-request-queue
mp.messaging.outgoing.filter-request-queue.durable=true
mp.messaging.outgoing.filter-request-queue.routing-key=filter-request-queue

mp.messaging.incoming.filter-response-queue.connector=smallrye-rabbitmq
mp.messaging.incoming.filter-response-queue.queue.name=filter-response-queue
mp.messaging.incoming.filter-response-queue.exchange.name=filter-response-queue
mp.messaging.incoming.filter-response-queue.durable=true
mp.messaging.incoming.filter-response-queue.routing-key=filter-response-queue

# CORS
quarkus.http.cors=true
quarkus.http.cors.origins=${CORS_ORIGINS:http://localhost:5173}




